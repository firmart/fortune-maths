#!/usr/bin/env bash 
# fortune-maths
set -e

usage() {
    echo "usage: $1 [[-a <pattern>] | [[[-l [-p [-L <lang>] [-n <num>]]] | [-s]] [<thm-code>]]]" >&2
}

FORTUNE="fortune"
PROOFS="/usr/local/share/games/fortunes/proofs"
command -v $FORTUNE > /dev/null || ( echo "E: Please install package 'fortune-mod'."; false )

LANG="*"
NUM=1000
LATEX_FLAG=0
PDF_FLAG=0
SEARCH_ARG=""
PROOF_FLAG=0
SHOW_FLAG=0
CODE=""

optspec="n:l:s:SpPLh"
while getopts "$optspec" optchar; do
    case "${optchar}" in
        # long options
        h)
            usage $0
            exit 2
            ;;
        s)
            SEARCH_ARG="${OPTARG}"
            ;;
        L)
            LATEX_FLAG=1
            ;;
        P)
            PDF_FLAG=1
            ;;
        p)
            PROOF_FLAG=1
            ;;
        S)
            SHOW_FLAG=1
            ;;
        n)
            NUM="${OPTARG}"
            ;;
        l)
            LANG="${OPTARG}"
            ;;
        *)
            if [ "$OPTERR" != 1 ] || [ "${optspec:0:1}" = ":" ]; then
                echo "Non-option argument: '-${OPTARG}'" >&2
            fi
            exit 2
            ;;
    esac
done


DICT="50% logic 50% models"
DATA=`$FORTUNE $DICT`
THM_FILENAME=$(echo "${DATA}" | head -n +1)
FILENAME=`basename -s ".thm" "${THM_FILENAME%.*}"`
THM_NAME=$(echo $FILENAME | sed 's|_| |g')
TEXT=`echo "${DATA}" | tail -n +2`

# output latex 
OUTPUT="\\section*{The $THM_NAME}"$'\n'
OUTPUT+=$TEXT

if [ "$SEARCH_ARG" != "" ]; then
    find $PROOFS -type f,l -name "*.thm.*.tex" -exec grep "$SEARCH_ARG" -l {} \+ | xargs -r basename -a
    exit 0
fi

if [ "$PROOF_FLAG" -eq 1 ]; then
    # statement + proof
    proofs_list="$(find $PROOFS -type f,l -name "$FILENAME.proof.$LANG.*.tex" -print)"
    if [ `echo "${proofs_list}" | sed '/^\s*$/d' |  wc -l` -gt 0 ]; then
        OUTPUT+=$'\\section*{Proofs}\n'
        OUTPUT+=$'\\begin{itemize}\n'
        for f in `echo "${proofs_list}" | head -n $NUM`; do
            OUTPUT+="\\item \\textbf{proof $(( ++proof_count ))} "
            OUTPUT+=$(cat $f)$'\n'
        done
        OUTPUT+=$'\\end{itemize}\n'
    fi
fi

if [ "$PDF_FLAG" -eq 1 ]; then
    echo "${OUTPUT}" | pandoc -f latex -o $FILENAME.pdf 
elif [ "$LATEX_FLAG" -eq 1 ]; then
    echo "${OUTPUT}"
else 
    if [ "$SHOW_FLAG" -eq 1 ]; then echo "<${FILENAME}>"; fi
    echo  "${OUTPUT}" | pandoc -f latex -t plain --filter ./behead.py
fi

